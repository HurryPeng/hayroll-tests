{
  "programs": [
    {
      "name": "2DPartInt",
      "path": "2DPartInt",
      "test_files": [
        "test/functions_spec.c"
      ]
    },
    {
      "name": "42-Kocaeli-Printf",
      "path": "42-Kocaeli-Printf",
      "test_files": [
        "tests/writenumber_test.c",
        "tests/writestring_test.c"
      ]
    },
    {
      "name": "CircularBuffer",
      "path": "CircularBuffer",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "FastHamming",
      "path": "FastHamming",
      "test_files": [
        "test/coding.c",
        "test/dummy.c",
        "test/log2uint8.c"
      ]
    },
    {
      "name": "Genetic-neural-network-for-simple-control",
      "path": "Genetic-neural-network-for-simple-control",
      "test_files": []
    },
    {
      "name": "Graph-recogniser",
      "path": "Graph-recogniser",
      "test_files": [
        "tests/test-unit.c"
      ]
    },
    {
      "name": "Holdem-Odds",
      "path": "Holdem-Odds",
      "test_files": [
        "src/tests/all_tests.c"
      ]
    },
    {
      "name": "LTRE",
      "path": "LTRE",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "Linear-Algebra-C",
      "path": "Linear-Algebra-C",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "Math-Library-in-C",
      "path": "Math-Library-in-C",
      "test_files": [
        "test/tests.c"
      ]
    },
    {
      "name": "Megalania",
      "path": "Megalania",
      "test_files": [
        "tests/main.c"
      ]
    },
    {
      "name": "NandC",
      "path": "NandC",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "Phills_DHT",
      "path": "Phills_DHT",
      "test_files": [
        "src/test/unit_tests/01_dht.c"
      ]
    },
    {
      "name": "Remimu",
      "path": "Remimu",
      "test_files": [
        "my_regex_test.c"
      ]
    },
    {
      "name": "Simple-Config",
      "path": "Simple-Config",
      "test_files": [
        "test/test.c"
      ]
    },
    {
      "name": "Simple-Sparsehash",
      "path": "Simple-Sparsehash",
      "test_files": [
        "src/test.c"
      ]
    },
    {
      "name": "SimpleXML",
      "path": "SimpleXML",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "SlothLang",
      "path": "SlothLang",
      "test_files": [
        "tests.c"
      ]
    },
    {
      "name": "VaultSync",
      "path": "VaultSync",
      "test_files": [
        "test/main_test.c"
      ]
    },
    {
      "name": "XOpt",
      "path": "XOpt",
      "test_files": [
        "test/macro-test.c",
        "test/simple-test.c"
      ]
    },
    {
      "name": "aes128-SIMD",
      "path": "aes128-SIMD",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "amp",
      "path": "amp",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "approxidate",
      "path": "approxidate",
      "test_files": [
        "approxidate-test.c"
      ]
    },
    {
      "name": "avalanche",
      "path": "avalanche",
      "test_files": [
        "tests/fnv_1a.c",
        "tests/matrix_test.c"
      ]
    },
    {
      "name": "bhshell",
      "path": "bhshell",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "bigint",
      "path": "bigint",
      "test_files": [
        "tests/test1.c",
        "tests/test2.c",
        "tests/test3.c"
      ]
    },
    {
      "name": "bitset",
      "path": "bitset",
      "test_files": [
        "tests/test_bitset.c"
      ]
    },
    {
      "name": "blt",
      "path": "blt",
      "test_files": [
        "tests/blt_test.c"
      ]
    },
    {
      "name": "bostree",
      "path": "bostree",
      "test_files": [
        "tests/remove_bug.c",
        "tests/remove_bug_2.c",
        "tests/sanity.c",
        "tests/timing.c"
      ]
    },
    {
      "name": "btree-map",
      "path": "btree-map",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "c-aces",
      "path": "c-aces",
      "test_files": [
        "tests/main-test.c"
      ]
    },
    {
      "name": "c-blind-rsa-signatures",
      "path": "c-blind-rsa-signatures",
      "test_files": [
        "src/test_blind_rsa.c"
      ]
    },
    {
      "name": "c-string",
      "path": "c-string",
      "test_files": [
        "tests/example.c",
        "tests/test_string_t.c"
      ]
    },
    {
      "name": "cJSON",
      "path": "cJSON",
      "test_files": [
        "tests/example.c",
        "tests/main.c"
      ]
    },
    {
      "name": "carrays",
      "path": "carrays",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "cfsm",
      "path": "cfsm",
      "test_files": [
        "tests/test_c_fsm.c"
      ]
    },
    {
      "name": "chtrie",
      "path": "chtrie",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "cissy",
      "path": "cissy",
      "test_files": [
        "test/test_csvfield.c",
        "test/test_csvline.c",
        "test/test_range.c"
      ]
    },
    {
      "name": "clhash",
      "path": "clhash",
      "test_files": [
        "tests/unit.c"
      ]
    },
    {
      "name": "clog",
      "path": "clog",
      "test_files": [
        "tests/clog_test_c.c"
      ]
    },
    {
      "name": "coroutine",
      "path": "coroutine",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "cset",
      "path": "cset",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "csyncmers",
      "path": "csyncmers",
      "test_files": [
        "tests/benchmark.c",
        "tests/test.c"
      ]
    },
    {
      "name": "dict",
      "path": "dict",
      "test_files": [
        "tests/test0.c",
        "tests/test1.c",
        "tests/test2.c",
        "tests/test3.c",
        "tests/test4.c",
        "tests/test5.c"
      ]
    },
    {
      "name": "emlang",
      "path": "emlang",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "expr",
      "path": "expr",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "fft",
      "path": "fft",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "file2str",
      "path": "file2str",
      "test_files": []
    },
    {
      "name": "fleur",
      "path": "fleur",
      "test_files": [
        "test/suite_1/test_vectors.c",
        "test/suite_2/test_fleur.c"
      ]
    },
    {
      "name": "fs_c",
      "path": "fs_c",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "fslib",
      "path": "fslib",
      "test_files": []
    },
    {
      "name": "geofence",
      "path": "geofence",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "gfc",
      "path": "gfc",
      "test_files": [
        "tests/gfc_bench.c",
        "tests/gfc_test.c"
      ]
    },
    {
      "name": "gorilla-paper-encode",
      "path": "gorilla-paper-encode",
      "test_files": [
        "custom_tests/test.c",
        "test.c"
      ]
    },
    {
      "name": "hamta",
      "path": "hamta",
      "test_files": []
    },
    {
      "name": "hydra",
      "path": "hydra",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "inversion_list",
      "path": "inversion_list",
      "test_files": [
        "tests/inversion-list/test-clone.c",
        "tests/inversion-list/test-complement.c",
        "tests/inversion-list/test-couple-iterator.c",
        "tests/inversion-list/test-create-destroy-2.c",
        "tests/inversion-list/test-create-destroy-3.c",
        "tests/inversion-list/test-create-destroy-4.c",
        "tests/inversion-list/test-difference.c",
        "tests/inversion-list/test-equals.c",
        "tests/inversion-list/test-getters.c",
        "tests/inversion-list/test-intersection.c",
        "tests/inversion-list/test-iterator.c",
        "tests/inversion-list/test-member.c",
        "tests/inversion-list/test-struct.c",
        "tests/inversion-list/test-to-string.c",
        "tests/inversion-list/test-union.c"
      ]
    },
    {
      "name": "jccc",
      "path": "jccc",
      "test_files": [
        "tests/identtest.c",
        "tests/lextest.c",
        "tests/mathtest.c",
        "tests/simplemain.c"
      ]
    },
    {
      "name": "kairoCompiler",
      "path": "kairoCompiler",
      "test_files": [
        "tests/main.c"
      ]
    },
    {
      "name": "kd3",
      "path": "kd3",
      "test_files": [
        "run_test.c"
      ]
    },
    {
      "name": "lambda-calculus-eval",
      "path": "lambda-calculus-eval",
      "test_files": [
        "tests/test_common.c",
        "tests/test_config.c",
        "tests/test_io.c",
        "tests/test_parser.c",
        "tests/test_reducer.c",
        "tests/test_typechecker.c"
      ]
    },
    {
      "name": "leftpad",
      "path": "leftpad",
      "test_files": [
        "tests.c"
      ]
    },
    {
      "name": "lib2bit",
      "path": "lib2bit",
      "test_files": [
        "test/exampleRead.c"
      ]
    },
    {
      "name": "libbase122",
      "path": "libbase122",
      "test_files": [
        "test/test.c",
        "test/testconsumer/testconsumer.c"
      ]
    },
    {
      "name": "libbeaufort",
      "path": "libbeaufort",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "libfor",
      "path": "libfor",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "libm17",
      "path": "libm17",
      "test_files": [
        "unit_tests/unit_tests.c"
      ]
    },
    {
      "name": "libpgn",
      "path": "libpgn",
      "test_files": [
        "tests/annotation.c",
        "tests/comments.c",
        "tests/coordinate.c",
        "tests/metadata.c",
        "tests/moves.c",
        "tests/pgn.c",
        "tests/score.c"
      ]
    },
    {
      "name": "libpsbt",
      "path": "libpsbt",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "libqueue",
      "path": "libqueue",
      "test_files": [
        "test/example.c",
        "test/test.c"
      ]
    },
    {
      "name": "libtinyfseq",
      "path": "libtinyfseq",
      "test_files": [
        "test/TFError_string.c",
        "test/build.c"
      ]
    },
    {
      "name": "libutf",
      "path": "libutf",
      "test_files": [
        "test/utf16/utf8-convert.c",
        "test/utf16/utf8-length.c",
        "test/utf16/validate-invalid.c",
        "test/utf16/validate.c",
        "test/utf8/string-append.c",
        "test/utf8/string-prepend.c",
        "test/utf8/string-replace.c",
        "test/utf8/string-substring.c",
        "test/utf8/utf16-convert.c",
        "test/utf8/utf16-length.c",
        "test/utf8/validate-invalid.c",
        "test/utf8/validate.c"
      ]
    },
    {
      "name": "libvcd",
      "path": "libvcd",
      "test_files": [
        "test/test.c"
      ]
    },
    {
      "name": "libwecan",
      "path": "libwecan",
      "test_files": [
        "tests/src/tests.c"
      ]
    },
    {
      "name": "ljmm",
      "path": "ljmm",
      "test_files": [
        "test/test_001.c",
        "test/test_002.c"
      ]
    },
    {
      "name": "matrix_multiplication",
      "path": "matrix_multiplication",
      "test_files": [
        "tests/test_matrix.c"
      ]
    },
    {
      "name": "mdb",
      "path": "mdb",
      "test_files": [
        "testmdb.c",
        "testmdb_int.c"
      ]
    },
    {
      "name": "merkle-tree-c",
      "path": "merkle-tree-c",
      "test_files": [
        "test_merkle_tree.c"
      ]
    },
    {
      "name": "morton",
      "path": "morton",
      "test_files": [
        "tests/bench.c",
        "tests/test.c"
      ]
    },
    {
      "name": "murmurhash_c",
      "path": "murmurhash_c",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "mvptree",
      "path": "mvptree",
      "test_files": [
        "testmvp.c",
        "testmvp2.c"
      ]
    },
    {
      "name": "quadtree",
      "path": "quadtree",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "razz_simulation",
      "path": "razz_simulation",
      "test_files": [
        "card_test.c"
      ]
    },
    {
      "name": "rbtree-lab",
      "path": "rbtree-lab",
      "test_files": [
        "test/final-test-rbtree.c",
        "test/test-rbtree.c",
        "test/test_rbtree_insert.c",
        "test/test_rbtree_rotate.c"
      ]
    },
    {
      "name": "recordManager",
      "path": "recordManager",
      "test_files": [
        "test_assign3_1.c",
        "test_expr.c"
      ]
    },
    {
      "name": "rect_pack_h",
      "path": "rect_pack_h",
      "test_files": [
        "test/test.c"
      ]
    },
    {
      "name": "rhbloom",
      "path": "rhbloom",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "roaring-bitmap",
      "path": "roaring-bitmap",
      "test_files": [
        "tests.c"
      ]
    },
    {
      "name": "rubiksolver",
      "path": "rubiksolver",
      "test_files": [
        "hash/hash_tests.c",
        "heap/heap_tests.c",
        "rubik_model_tests.c"
      ]
    },
    {
      "name": "satc",
      "path": "satc",
      "test_files": [
        "satc-test.c"
      ]
    },
    {
      "name": "simple_lang",
      "path": "simple_lang",
      "test_files": [
        "Tests/test_compiler.c",
        "Tests/test_lexer.c",
        "Tests/test_parser.c"
      ]
    },
    {
      "name": "ted",
      "path": "ted",
      "test_files": [
        "tests/runtests.c"
      ]
    },
    {
      "name": "tisp",
      "path": "tisp",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "totp",
      "path": "totp",
      "test_files": [
        "test.c"
      ]
    },
    {
      "name": "ulidgen",
      "path": "ulidgen",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "utf8",
      "path": "utf8",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "vec",
      "path": "vec",
      "test_files": [
        "tests/test.c"
      ]
    },
    {
      "name": "worsp",
      "path": "worsp",
      "test_files": [
        "tests/test.c"
      ]
    }
  ]
}